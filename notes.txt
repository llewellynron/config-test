#Local git states
# working dir -(add)-> staging area -(commit)-> repository (.git folder) -(push)-> remote repo
#
# main branch is now used instead of master branch

Common git commands:
git clone <repo_URL>    # Will create repo directory when run
git version
git help
git help config
cat ~/.gitconfig
git config --global --list
git config --global user.email "llewellynron@hotmail.com"
git config --global user.name "Ron Llewellyn"
git config --global core.editor
core.editor="C:\Users\Ron\AppData\Local\atom\app-1.54.0\atom.exe" --wait

git remote -v
git remote show
git remote show origin

git add README.md
git commit -m "first commit"

git branch          # see current branch_name and all branches
git branch <new_branch_name>  # Create a new branch
git checkout branch_name      # Change to branch_name
git checkout -b <new_branch_name>   # Will checkout and create new branch in one step
    (now create files that will later be merged back to main branch)
    Example:
    git add README.md
    git commit -m "Adding READM file for  new branch"
    git checkout main
    git diff new_branch_name main   # will show how the change will merge
    git hist
    git merge new_branch_name   # perform the merge (into main (current) branch)
    git hist
    # Above merge will be a fast forward merge, will show in history as though update was to main/merged branches
    git merge --no-ff new_branch_name   # perform the merge w/o FF, will open editor for commit message input
    git hist

# Automatic merge is a merge with no conflicts (can be a fast forward merge)

git branch -M main
git remote add origin https://github.com/llewellynron/config-test.git
git push -u origin main
git remote add origin https://github.com/llewellynron/config-test.git
git branch -M main
git push -u origin main
git status

# Add all
git add -A
git add .
git commit -m "commit changes"
git commit -am "express commit; add and commit changes"

#New Repo -- updated from local
#Create repo on github
git remove add origin "copied repo URL"
git clone "copied repo URL"   #should copy README.md file)
git add * or git add . or git add file_name
git comment -m "<message>"
git push origin "<branch_name>"

git branch -a
git log

#restore or pull file
git checkout

#remove a file
git rm <file_name>

git push origin :<branch_to_delete>

git log --oneline --all --decorate --graph
git config --global alias.hist "log --oneline --all --decorate --graph"
git hist


#  Pycharm Notes
CTRL + /  = comment selected lines
ALT + RightClick = Select column position for movement control
SHIFT + ALT + (UP or DOWN) = Move selected lines up or down
